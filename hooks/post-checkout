#!/bin/bash
set -ueo pipefail
set -x

# Reads either a value or a list from plugin config
function plugin_read_list() {
  prefix_read_list "BUILDKITE_PLUGIN_MULTI_REPO_$1"
}

# Reads either a value or a list from the given env prefix
function prefix_read_list() {
  local prefix="$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i + 1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

mapfile -t repos < <(plugin_read_list REPO)

# Only run if we have repos
if [[ "${#repos[@]}" -gt 0 ]]; then
  echo "--- Cloning additional repositories"
  for r in "${repos[@]}"; do
    if [[ $r =~ "=" ]]; then
      # This pattern matched should allow to correctly parse "this=that=t" as
      # repo=this=that
      # folder=t
      repo="${r%"="*}"       # Remove from $r the shortest part of "=" that matches the back end of $r
      folder="${r##*"="}"    # Remove from $r the longest part of "=" that matches the front end of $r
      folder="${folder:-""}" # If no folder, use the local folder with the repo name
    else
      repo="${r}"
      folder=""
    fi

    if [[ "${BUILDKITE_PLUGIN_MULTI_REPO_FAIL:-}" =~ true|1|on ]]; then
      git clone -v -- "$repo" "$folder"
    else
      git clone -v -- "$repo" "$folder" ||
        (
          echo "^^^ +++"
          echo "Some clone commands failed"
        )
    fi
  done
fi
